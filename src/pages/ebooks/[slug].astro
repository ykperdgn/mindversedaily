---
import BaseLayout from '../../layouts/BaseLayout.astro';
import { getCollection } from 'astro:content';
import { extractPreview } from '../../utils/extractPreview';

export async function getStaticPaths() {
  const ebooks = await getCollection('ebooks');
  return ebooks.map(entry => ({ params: { slug: entry.slug ?? entry.id.replace(/\.md$/, '') }, props: { entry } }));
}

const { entry } = Astro.props;
const { data, body } = entry;
const previewHtml = extractPreview(body, data.preview || {});
const indexingEnabled = import.meta.env.PUBLIC_INDEXING === 'true';
const bookLd = JSON.stringify({
  '@context':'https://schema.org',
  '@type':'Book',
  name: data.title,
  author: { '@type':'Person', name: data.author },
  inLanguage: data.language || 'en',
  datePublished: new Date(data.publishDate).toISOString().split('T')[0],
  image: data.cover ? new URL(data.cover, Astro.site || Astro.url).href : undefined,
  description: data.description,
  workExample: {
    '@type':'Book',
    isbn: data.amazonAsin,
    potentialAction: {
      '@type':'ReadAction',
      target: data.amazonUrl
    }
  },
  offers: {
    '@type':'Offer',
    url: data.amazonUrl,
    availability: 'https://schema.org/InStock'
  }
}, null, 2);

const jsonLd = {
  '@context': 'https://schema.org',
  '@type': 'Book',
  name: data.title,
  author: { '@type': 'Person', name: data.author },
  inLanguage: data.language || 'en',
  datePublished: new Date(data.publishDate).toISOString().split('T')[0],
  bookFormat: 'EBook',
  url: Astro.url?.href,
  image: data.cover ? new URL(data.cover, Astro.url).href : undefined,
  description: data.description,
  workExample: {
    '@type': 'Book',
    bookEdition: 'Kindle',
    potentialAction: {
      '@type': 'ReadAction',
      target: data.amazonUrl
    }
  }
};
---
<BaseLayout title={`${data.title} | MindVerse`} description={data.description}>
  <script type="application/ld+json">{JSON.stringify(jsonLd)}</script>
  {indexingEnabled && <script type="application/ld+json" set:html={bookLd} />}
  <article style="max-width:820px;margin:0 auto;">
    <header style="display:flex;flex-direction:column;gap:1rem;margin-bottom:2rem;">
      <h1 style="margin:0;font-size:clamp(2rem,5vw,3rem);line-height:1.15;background:var(--grad);-webkit-background-clip:text;color:transparent;">{data.title}</h1>
      <p style="margin:0;font-size:.9rem;opacity:.75;">By {data.author} â€¢ {new Date(data.publishDate).toLocaleDateString('en-US',{dateStyle:'medium'})}</p>
      {data.cover && <img src={data.cover} alt={data.title} style="width:220px;aspect-ratio:3/4;object-fit:cover;border-radius:1rem;border:1px solid var(--border);" />}
      <p style="margin:0;font-size:1rem;opacity:.85;max-width:640px;">{data.description}</p>
      <div>
        <a href={data.amazonUrl} target="_blank" rel="noopener" class="buy-btn">Open on Amazon</a>
      </div>
    </header>
    <section class="preview">
      <h2 style="font-size:1.1rem;margin:0 0 .75rem;letter-spacing:.5px;opacity:.85;">Preview</h2>
      <div class="preview-body" set:html={previewHtml.replace(/\n\n/g,'</p><p>').replace(/\n/g,'<br/>').replace(/^/,'<p>').concat('</p>')} />
      <div style="margin-top:1.5rem;">
        <a href={data.amazonUrl} target="_blank" rel="noopener" class="buy-btn large">Continue Reading on Kindle</a>
      </div>
    </section>
  </article>
  <style>
    .buy-btn{display:inline-block;background:linear-gradient(135deg,#6366f1,#8b5cf6,#ec4899);padding:.85rem 1.4rem;border-radius:999px;font-weight:600;color:#fff;text-decoration:none;font-size:.9rem;box-shadow:0 4px 18px -4px rgba(99,102,241,.5);transition:.25s;} .buy-btn:hover{transform:translateY(-2px);box-shadow:0 6px 22px -6px rgba(99,102,241,.6);} .buy-btn.large{font-size:1rem;padding:1rem 1.75rem;}
    .preview-body p{margin:0 0 1rem;font-size:1rem;line-height:1.6;}
    .preview{background:rgba(255,255,255,0.03);border:1px solid var(--border);padding:2rem;border-radius:1.5rem;margin-top:1rem;}
  </style>
</BaseLayout>
