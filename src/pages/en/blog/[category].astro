---
import BaseHead from '../../../components/BaseHead.astro';
import Header from '../../../components/Header.astro';
import Footer from '../../../components/Footer.astro';
import { SITE_TITLE, SITE_DESCRIPTION } from '../../../consts';
import { getCollection } from 'astro:content';
import FormattedDate from '../../../components/FormattedDate.astro';

export async function getStaticPaths() {
  const posts = await getCollection('blog');
  const englishPosts = posts.filter(post => post.slug && post.slug.endsWith('.en'));
  const categories = [...new Set(englishPosts.map(post => post.data.category).filter(Boolean))];

  return categories.map(category => ({
    params: { category },
    props: { category }
  }));
}

const { category } = Astro.params;
const allPosts = await getCollection('blog');

// ƒ∞ngilizce kategori sayfasƒ± - SADECE ƒ∞ngilizce i√ßerikler
const posts = allPosts
  .filter(post => post.slug && post.slug.endsWith('.en')) // Sadece ƒ∞ngilizce
  .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());

// Filter posts by category
const filteredPosts = posts.filter(post =>
  post.data.category?.toLowerCase() === category.toLowerCase()
);

// Get all available categories for navigation
const availableCategories = [...new Set(posts.map(post => post.data.category).filter(Boolean))];
const categories = availableCategories.length > 0
  ? availableCategories.sort()
  : ["health", "psychology", "history", "space", "quotes", "love"];

const categoryIcons = {
  health: "üß¨",
  psychology: "üß†",
  history: "üìú",
  space: "üöÄ",
  quotes: "üí¨",
  love: "‚ù§Ô∏è"
};

// Category descriptions in English
const categoryDescriptions = {
  health: "Latest breakthroughs in health, medicine, and wellness research",
  psychology: "Insights into human behavior, mental health, and cognitive science",
  history: "Fascinating stories and discoveries from our past",
  space: "Space exploration, astronomy, and cosmic discoveries",
  quotes: "Inspirational quotes and wisdom from great minds",
  love: "The science of relationships, emotions, and human connections"
};

const categoryTitle = category.charAt(0).toUpperCase() + category.slice(1);
const pageTitle = `${categoryTitle} Articles - MindVerse Daily`;
const pageDescription = categoryDescriptions[category] || `Latest articles about ${category} from MindVerse Daily`;
const pageKeywords = `${category}, ${category} articles, ${category} research, science news, MindVerse Daily`;
---

<!DOCTYPE html>
<html lang="en-US">
  <head>
    <BaseHead
      title={pageTitle}
      description={pageDescription}
      keywords={pageKeywords}
    />
  </head>
  <body>
    <div class="content-wrapper">
      <Header />

      <main class="mv-main-blog">
        <!-- Category Header -->
        <section class="mv-blog-header">
          <h1 class="mv-page-title">
            <span class="category-icon">{categoryIcons[category]}</span>
            {categoryTitle} Articles
          </h1>
          <p class="mv-page-description">{categoryDescriptions[category]}</p>
        </section>

        <!-- Categories Navigation -->
        <nav class="mv-categories">
          <a href="/en/blog" class="mv-category-tab">
            <span class="category-icon">üìö</span>
            All
          </a>
          {categories.map((cat) => (
            <a href={`/en/blog/${cat}`} class={`mv-category-tab ${cat === category ? 'active' : ''}`}>
              <span class="category-icon">{categoryIcons[cat]}</span>
              {cat.charAt(0).toUpperCase() + cat.slice(1)}
            </a>
          ))}
        </nav>

        <!-- Blog Posts Grid -->
        <section class="mv-grid-section">
          {filteredPosts.length > 0 ? (
            <ul class="mv-grid">
              {filteredPosts.map((post) => (
                <li class="mv-card">
                  <a href={`/blog/${post.slug}`}>
                    <img
                      src={post.data.heroImage || '/assets/blog-placeholder-1.svg'}
                      alt={post.data.title}
                      class="mv-card-img"
                      loading="lazy"
                      onError="(e) => {
                        e.target.src = '/assets/blog-placeholder-1.svg';
                      }"
                    />
                    <div class="mv-card-content">
                      <div class="mv-card-title">{post.data.title}</div>
                      <div class="mv-card-summary">{post.data.description}</div>
                      <div class="mv-card-meta">
                        <span class="category-badge">{post.data.category}</span>
                        <FormattedDate date={post.data.pubDate} />
                      </div>
                    </div>
                  </a>
                </li>
              ))}
            </ul>
          ) : (
            <div class="mv-empty-state">
              <h3>No articles found in this category</h3>
              <p>Check back later for new content!</p>
              <a href="/en/blog" class="mv-button">Browse All Articles</a>
            </div>
          )}
        </section>
      </main>

      <Footer />
    </div>
  </body>
</html>
